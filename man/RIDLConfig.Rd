% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/configuration.R
\name{RIDLConfig}
\alias{RIDLConfig}
\title{RIDL Configuration}
\description{
RIDL Configuration

RIDL Configuration
}
\details{
RIDL Configuration allow to connect to a RIDL server
and setup project where you can interact with the RIDL platform
}
\examples{
\dontrun{
 ridl_config()
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{all info in list.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RIDLConfig-new}{\code{RIDLConfig$new()}}
\item \href{#method-RIDLConfig-set_token}{\code{RIDLConfig$set_token()}}
\item \href{#method-RIDLConfig-get_token}{\code{RIDLConfig$get_token()}}
\item \href{#method-RIDLConfig-get_site_url}{\code{RIDLConfig$get_site_url()}}
\item \href{#method-RIDLConfig-get_log_file}{\code{RIDLConfig$get_log_file()}}
\item \href{#method-RIDLConfig-remoteclient}{\code{RIDLConfig$remoteclient()}}
\item \href{#method-RIDLConfig-call_action}{\code{RIDLConfig$call_action()}}
\item \href{#method-RIDLConfig-read}{\code{RIDLConfig$read()}}
\item \href{#method-RIDLConfig-setup}{\code{RIDLConfig$setup()}}
\item \href{#method-RIDLConfig-delete}{\code{RIDLConfig$delete()}}
\item \href{#method-RIDLConfig-as_list}{\code{RIDLConfig$as_list()}}
\item \href{#method-RIDLConfig-print}{\code{RIDLConfig$print()}}
\item \href{#method-RIDLConfig-clone}{\code{RIDLConfig$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-new"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-new}{}}}
\subsection{Method \code{new()}}{
Create a new Configuration object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$new(
  site = "prod",
  token = NULL,
  key = NULL,
  user_agent = NULL,
  log_file = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{site}}{character, the RIDL instance, prod (production server), test (testing server)}

\item{\code{token}}{character, the RIDL API token}

\item{\code{key}}{character, \ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}} the RIDL API key, is no longer recommended use the API \code{token} instead}

\item{\code{user_agent}}{character value, User agent}

\item{\code{log_file}}{character, the log file}

\item{\code{...}}{curl options to pass to crul::HttpClient}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new Configuration object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-set_token"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-set_token}{}}}
\subsection{Method \code{set_token()}}{
Specify a RIDL API token
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$set_token(token)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{token}}{a character with token}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-get_token"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-get_token}{}}}
\subsection{Method \code{get_token()}}{
Specify a RIDL API token
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$get_token()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
a character, the RIDL API token
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-get_site_url"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-get_site_url}{}}}
\subsection{Method \code{get_site_url()}}{
Get the RIDL server URL in use
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$get_site_url()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the server URL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-get_log_file"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-get_log_file}{}}}
\subsection{Method \code{get_log_file()}}{
Get the log file used by RIDL
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$get_log_file()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
the log file
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-remoteclient"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-remoteclient}{}}}
\subsection{Method \code{remoteclient()}}{
Get the remoteclient currently used
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$remoteclient(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{curl options to pass to crul::HttpClient}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a crul::HttpClient
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-call_action"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-call_action}{}}}
\subsection{Method \code{call_action()}}{
Call the client to the RIDL API
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$call_action(action, ..., verb = "get")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{action}}{a character}

\item{\code{...}}{parameters for each verb used}

\item{\code{verb}}{a character the verb used, \code{post}, \code{get}, \code{put} or \code{patch}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list a with status code and results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-read"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-read}{}}}
\subsection{Method \code{read()}}{
read and show Configuration object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$read()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Configuration object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-setup"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-setup}{}}}
\subsection{Method \code{setup()}}{
Setup Configuration object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$setup(
  site = "prod",
  token = NULL,
  key = NULL,
  configuration = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{site}}{character, the RIDL instance, prod (production server), test (testing server)}

\item{\code{token}}{a character value, the API token}

\item{\code{key}}{a character value, the API key}

\item{\code{configuration}}{a character}

\item{\code{...}}{curl options to pass to crul::HttpClient}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-delete"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-delete}{}}}
\subsection{Method \code{delete()}}{
Delete a Configuration object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$delete()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-as_list"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-as_list}{}}}
\subsection{Method \code{as_list()}}{
Convert configuration to list
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$as_list()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
configuration in list format
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-print"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-print}{}}}
\subsection{Method \code{print()}}{
Print Configuration object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RIDLConfig-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RIDLConfig-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RIDLConfig$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
